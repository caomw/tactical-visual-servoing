#############################################################################
# Makefile for building: TACTICAL
# Generated by qmake (2.01a) (Qt 4.5.2) on: Fri Oct 23 09:36:27 2009
# Project:  TACTICAL.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -g -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\..\..\Qt\2009.03\qt\include\QtCore" -I"..\..\..\..\Qt\2009.03\qt\include\QtNetwork" -I"..\..\..\..\Qt\2009.03\qt\include\QtGui" -I"..\..\..\..\Qt\2009.03\qt\include\QtOpenGL" -I"..\..\..\..\Qt\2009.03\qt\include" -I"..\..\..\..\TACTICAL\OpenCV\cv\include" -I"..\..\..\..\TACTICAL\OpenCV\otherlibs\highgui" -I"..\..\..\..\TACTICAL\OpenCV\cxcore\include" -I"..\..\..\..\TACTICAL\OpenCV\cvaux\include" -I"..\..\..\..\TACTICAL\gsl-1.8-lib\include" -I"..\..\..\..\TACTICAL\SDL-1.2.13\include" -I"..\..\..\..\Qt\2009.03\qt\include\ActiveQt" -I"debug" -I"." -I"..\..\..\..\Qt\2009.03\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2009.03\qt\lib" -lopengl32 -lglu32 -lgdi32 -luser32 -lmingw32 -lqtmaind C:\TACTICAL\OpenCV\lib\cv.lib C:\TACTICAL\OpenCV\lib\highgui.lib C:\TACTICAL\OpenCV\lib\cxcore.lib C:\TACTICAL\OpenCV\lib\cvaux.lib C:\TACTICAL\gsl-1.8-lib\lib\libgsl.a C:\TACTICAL\gsl-1.8-lib\lib\libgslcblas.a C:\TACTICAL\SDL-1.2.13\lib\SDL.lib C:\TACTICAL\SDL-1.2.13\lib\SDL_image.lib -lQtOpenGLd4 -lQtGuid4 -lQtNetworkd4 -lQtCored4
QMAKE         = c:\Qt\2009.03\qt\bin\qmake.exe
IDC           = c:\Qt\2009.03\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		ImageProcessing.cpp \
		utilities\utilities.cpp \
		image_functions\Image_Functions.cpp \
		tracking_algorithms\Blob\SIFT\imgfeatures.cpp \
		tracking_algorithms\Blob\SIFT\kdtree.cpp \
		tracking_algorithms\Blob\SIFT\minpq.cpp \
		tracking_algorithms\Blob\SIFT\sift.cpp \
		tracking_algorithms\Blob\SIFT\utils.cpp \
		tracking_algorithms\Blob\SIFT\xform.cpp \
		tracking_algorithms\Optical_Flow\Horn_Schunck\Horn_Schunck.cpp \
		tracking_algorithms\Optical_Flow\klt++\convolve.cpp \
		tracking_algorithms\Optical_Flow\klt++\error.cpp \
		tracking_algorithms\Optical_Flow\klt++\klt.cpp \
		tracking_algorithms\Optical_Flow\klt++\klt_util.cpp \
		tracking_algorithms\Optical_Flow\klt++\pnmio.cpp \
		tracking_algorithms\Optical_Flow\klt++\pyramid.cpp \
		tracking_algorithms\Optical_Flow\klt++\selectGoodFeatures.cpp \
		tracking_algorithms\Optical_Flow\klt++\trackFeatures.cpp \
		tracking_algorithms\Optical_Flow\klt++\writeFeatures.cpp \
		tracking_algorithms\Optical_Flow\LK_OpenCV\LK_OpenCV.cpp \
		tracking_algorithms\Blob\OpenSURF\utils_surf.cpp \
		tracking_algorithms\Blob\OpenSURF\integral.cpp \
		tracking_algorithms\Blob\OpenSURF\fasthessian.cpp \
		tracking_algorithms\Blob\OpenSURF\surf.cpp \
		tracking_algorithms\Blob\OpenSURF\ipoint.cpp debug\moc_mainwindow.cpp
OBJECTS       = debug/main.o \
		debug/mainwindow.o \
		debug/ImageProcessing.o \
		debug/utilities.o \
		debug/Image_Functions.o \
		debug/imgfeatures.o \
		debug/kdtree.o \
		debug/minpq.o \
		debug/sift.o \
		debug/utils.o \
		debug/xform.o \
		debug/Horn_Schunck.o \
		debug/convolve.o \
		debug/error.o \
		debug/klt.o \
		debug/klt_util.o \
		debug/pnmio.o \
		debug/pyramid.o \
		debug/selectGoodFeatures.o \
		debug/trackFeatures.o \
		debug/writeFeatures.o \
		debug/LK_OpenCV.o \
		debug/utils_surf.o \
		debug/integral.o \
		debug/fasthessian.o \
		debug/surf.o \
		debug/ipoint.o \
		debug/moc_mainwindow.o
DIST          = 
QMAKE_TARGET  = TACTICAL
DESTDIR        = debug\ #avoid trailing-slash linebreak
TARGET         = TACTICAL.exe
DESTDIR_TARGET = debug\TACTICAL.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.TACTICAL.Debug  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec ..\..\..\..\Qt\2009.03\qt\mkspecs\win32-g++ -win32 -o Makefile.Debug TACTICAL.pro

dist:
	$(ZIP) TACTICAL.zip $(SOURCES) $(DIST) TACTICAL.pro ..\..\..\..\Qt\2009.03\qt\mkspecs\qconfig.pri ..\..\..\..\Qt\2009.03\qt\mkspecs\features\qt_functions.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\qt_config.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\exclusive_builds.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\default_pre.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\default_pre.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\debug.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\debug_and_release.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\default_post.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\default_post.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\build_pass.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\rtti.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\exceptions.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\stl.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\shared.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\warn_on.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\qt.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\opengl.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\thread.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\moc.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\win32\windows.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\resources.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\uic.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\yacc.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\lex.prf ..\..\..\..\Qt\2009.03\qt\mkspecs\features\include_source_dir.prf c:\Qt\2009.03\qt\lib\qtmaind.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\main.o debug\mainwindow.o debug\ImageProcessing.o debug\utilities.o debug\Image_Functions.o debug\imgfeatures.o debug\kdtree.o debug\minpq.o debug\sift.o debug\utils.o debug\xform.o debug\Horn_Schunck.o debug\convolve.o debug\error.o debug\klt.o debug\klt_util.o debug\pnmio.o debug\pyramid.o debug\selectGoodFeatures.o debug\trackFeatures.o debug\writeFeatures.o debug\LK_OpenCV.o debug\utils_surf.o debug\integral.o debug\fasthessian.o debug\surf.o debug\ipoint.o debug\moc_mainwindow.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_mainwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_mainwindow.cpp
debug/moc_mainwindow.cpp: image_functions/Image_Functions.h \
		utilities/utilities.h \
		mainwindow.h
	C:/Qt/2009.03/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o debug\moc_mainwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	c:\Qt\2009.03\qt\bin\uic.exe mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

debug/main.o: main.cpp mainwindow.h \
		image_functions/Image_Functions.h \
		utilities/utilities.h \
		tracking_algorithms/Correlation/TuringTracking/TuringTracking.h \
		tracking_algorithms/Correlation/TuringTracking/SimpleIni.h \
		tracking_algorithms/Correlation/TuringTracking/ConvertUTF.h \
		tracking_algorithms/Optical_Flow/Horn_Schunck/Horn_Schunck.h \
		tracking_algorithms/Optical_Flow/Farneback/Farneback.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h \
		tracking_algorithms/Optical_Flow/klt++/pnmio.h \
		tracking_algorithms/Optical_Flow/LK_OpenCV/LK_OpenCV.h \
		tracking_algorithms/Blob/SIFT/sift.h \
		tracking_algorithms/Blob/SIFT/imgfeatures.h \
		tracking_algorithms/Blob/SIFT/kdtree.h \
		tracking_algorithms/Blob/SIFT/utils.h \
		tracking_algorithms/Blob/SIFT/xform.h \
		tracking_algorithms/Blob/OpenSURF/surflib.h \
		tracking_algorithms/Blob/OpenSURF/integral.h \
		tracking_algorithms/Blob/OpenSURF/fasthessian.h \
		tracking_algorithms/Blob/OpenSURF/ipoint.h \
		tracking_algorithms/Blob/OpenSURF/surf.h \
		tracking_algorithms/Blob/OpenSURF/utils_surf.h \
		ImageProcessing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\main.o main.cpp

debug/mainwindow.o: mainwindow.cpp mainwindow.h \
		image_functions/Image_Functions.h \
		utilities/utilities.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\mainwindow.o mainwindow.cpp

debug/ImageProcessing.o: ImageProcessing.cpp ImageProcessing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ImageProcessing.o ImageProcessing.cpp

debug/utilities.o: utilities/utilities.cpp utilities/utilities.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\utilities.o utilities\utilities.cpp

debug/Image_Functions.o: image_functions/Image_Functions.cpp image_functions/Image_Functions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Image_Functions.o image_functions\Image_Functions.cpp

debug/imgfeatures.o: tracking_algorithms/Blob/SIFT/imgfeatures.cpp tracking_algorithms/Blob/SIFT/utils.h \
		tracking_algorithms/Blob/SIFT/imgfeatures.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\imgfeatures.o tracking_algorithms\Blob\SIFT\imgfeatures.cpp

debug/kdtree.o: tracking_algorithms/Blob/SIFT/kdtree.cpp tracking_algorithms/Blob/SIFT/kdtree.h \
		tracking_algorithms/Blob/SIFT/minpq.h \
		tracking_algorithms/Blob/SIFT/imgfeatures.h \
		tracking_algorithms/Blob/SIFT/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\kdtree.o tracking_algorithms\Blob\SIFT\kdtree.cpp

debug/minpq.o: tracking_algorithms/Blob/SIFT/minpq.cpp tracking_algorithms/Blob/SIFT/minpq.h \
		tracking_algorithms/Blob/SIFT/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\minpq.o tracking_algorithms\Blob\SIFT\minpq.cpp

debug/sift.o: tracking_algorithms/Blob/SIFT/sift.cpp tracking_algorithms/Blob/SIFT/sift.h \
		tracking_algorithms/Blob/SIFT/imgfeatures.h \
		tracking_algorithms/Blob/SIFT/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\sift.o tracking_algorithms\Blob\SIFT\sift.cpp

debug/utils.o: tracking_algorithms/Blob/SIFT/utils.cpp tracking_algorithms/Blob/SIFT/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\utils.o tracking_algorithms\Blob\SIFT\utils.cpp

debug/xform.o: tracking_algorithms/Blob/SIFT/xform.cpp tracking_algorithms/Blob/SIFT/xform.h \
		tracking_algorithms/Blob/SIFT/imgfeatures.h \
		tracking_algorithms/Blob/SIFT/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\xform.o tracking_algorithms\Blob\SIFT\xform.cpp

debug/Horn_Schunck.o: tracking_algorithms/Optical_Flow/Horn_Schunck/Horn_Schunck.cpp tracking_algorithms/Optical_Flow/Horn_Schunck/Horn_Schunck.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\Horn_Schunck.o tracking_algorithms\Optical_Flow\Horn_Schunck\Horn_Schunck.cpp

debug/convolve.o: tracking_algorithms/Optical_Flow/klt++/convolve.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/convolve.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\convolve.o tracking_algorithms\Optical_Flow\klt++\convolve.cpp

debug/error.o: tracking_algorithms/Optical_Flow/klt++/error.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\error.o tracking_algorithms\Optical_Flow\klt++\error.cpp

debug/klt.o: tracking_algorithms/Optical_Flow/klt++/klt.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/convolve.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/pyramid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\klt.o tracking_algorithms\Optical_Flow\klt++\klt.cpp

debug/klt_util.o: tracking_algorithms/Optical_Flow/klt++/klt_util.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/pnmio.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\klt_util.o tracking_algorithms\Optical_Flow\klt++\klt_util.cpp

debug/pnmio.o: tracking_algorithms/Optical_Flow/klt++/pnmio.cpp tracking_algorithms/Optical_Flow/klt++/error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\pnmio.o tracking_algorithms\Optical_Flow\klt++\pnmio.cpp

debug/pyramid.o: tracking_algorithms/Optical_Flow/klt++/pyramid.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/convolve.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h \
		tracking_algorithms/Optical_Flow/klt++/pyramid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\pyramid.o tracking_algorithms\Optical_Flow\klt++\pyramid.cpp

debug/selectGoodFeatures.o: tracking_algorithms/Optical_Flow/klt++/selectGoodFeatures.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/convolve.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h \
		tracking_algorithms/Optical_Flow/klt++/pyramid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\selectGoodFeatures.o tracking_algorithms\Optical_Flow\klt++\selectGoodFeatures.cpp

debug/trackFeatures.o: tracking_algorithms/Optical_Flow/klt++/trackFeatures.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/convolve.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h \
		tracking_algorithms/Optical_Flow/klt++/pyramid.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\trackFeatures.o tracking_algorithms\Optical_Flow\klt++\trackFeatures.cpp

debug/writeFeatures.o: tracking_algorithms/Optical_Flow/klt++/writeFeatures.cpp tracking_algorithms/Optical_Flow/klt++/base.h \
		tracking_algorithms/Optical_Flow/klt++/error.h \
		tracking_algorithms/Optical_Flow/klt++/pnmio.h \
		tracking_algorithms/Optical_Flow/klt++/klt.h \
		tracking_algorithms/Optical_Flow/klt++/klt_util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\writeFeatures.o tracking_algorithms\Optical_Flow\klt++\writeFeatures.cpp

debug/LK_OpenCV.o: tracking_algorithms/Optical_Flow/LK_OpenCV/LK_OpenCV.cpp tracking_algorithms/Optical_Flow/LK_OpenCV/LK_OpenCV.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\LK_OpenCV.o tracking_algorithms\Optical_Flow\LK_OpenCV\LK_OpenCV.cpp

debug/utils_surf.o: tracking_algorithms/Blob/OpenSURF/utils_surf.cpp tracking_algorithms/Blob/OpenSURF/utils_surf.h \
		tracking_algorithms/Blob/OpenSURF/ipoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\utils_surf.o tracking_algorithms\Blob\OpenSURF\utils_surf.cpp

debug/integral.o: tracking_algorithms/Blob/OpenSURF/integral.cpp tracking_algorithms/Blob/OpenSURF/utils_surf.h \
		tracking_algorithms/Blob/OpenSURF/ipoint.h \
		tracking_algorithms/Blob/OpenSURF/integral.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\integral.o tracking_algorithms\Blob\OpenSURF\integral.cpp

debug/fasthessian.o: tracking_algorithms/Blob/OpenSURF/fasthessian.cpp tracking_algorithms/Blob/OpenSURF/integral.h \
		tracking_algorithms/Blob/OpenSURF/ipoint.h \
		tracking_algorithms/Blob/OpenSURF/utils_surf.h \
		tracking_algorithms/Blob/OpenSURF/fasthessian.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\fasthessian.o tracking_algorithms\Blob\OpenSURF\fasthessian.cpp

debug/surf.o: tracking_algorithms/Blob/OpenSURF/surf.cpp tracking_algorithms/Blob/OpenSURF/utils_surf.h \
		tracking_algorithms/Blob/OpenSURF/ipoint.h \
		tracking_algorithms/Blob/OpenSURF/surf.h \
		tracking_algorithms/Blob/OpenSURF/integral.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\surf.o tracking_algorithms\Blob\OpenSURF\surf.cpp

debug/ipoint.o: tracking_algorithms/Blob/OpenSURF/ipoint.cpp tracking_algorithms/Blob/OpenSURF/ipoint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\ipoint.o tracking_algorithms\Blob\OpenSURF\ipoint.cpp

debug/moc_mainwindow.o: debug/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_mainwindow.o debug\moc_mainwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

